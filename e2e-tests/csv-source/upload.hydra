PREFIX api: <https://cube-creator.zazuko.com/vocab#>
PREFIX hydra: <http://www.w3.org/ns/hydra/core#>
PREFIX cc: <https://cube-creator.zazuko.com/vocab#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX query: <http://hypermedia.app/query#>
PREFIX csvw: <http://www.w3.org/ns/csvw#>
PREFIX schema: <http://schema.org/>

HEADERS {
  x-user "john-doe"
  x-permission "pipelines:write"
}


With Class api:EntryPoint {
    Expect Property cc:projects {
        With Operation schema:CreateAction {
            Invoke {
                Content-Type "text/turtle"

                ```
                prefix cc: <https://cube-creator.zazuko.com/vocab#>
                prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
                PREFIX schema: <http://schema.org/>
                PREFIX dcterms: <http://purl.org/dc/terms/>

                <> cc:projectSourceKind <https://cube-creator.lndo.site/shape/cube-project/create#CSV> ;
                   rdfs:label "Upload Test Project" ;
                   dcterms:identifier "upload-test-cube" ;
                   schema:maintainer <https://cube-creator.lndo.site/organization/bafu> .
                ```
            } => {
                Expect Status 201
            }
        }
    }
}

With Class cc:CubeProject {
    Expect Link cc:csvMapping {
        Expect Property cc:csvSourceCollection {
            Expect Operation cc:UploadCSVAction {
                Invoke {
                    Content-Type "text/csv"
                    Content-Disposition "file; filename=test.jpg"

                    ```
                    A,B,C
                    1,2,test
                    1,2,test
                    1,2,test1
                    1,2,test2
                    ```
                } => {
                    Expect Status 201
                    Expect Type <https://cube-creator.zazuko.com/vocab#CSVSource>
                    Expect Property <http://schema.org/associatedMedia>
                    Expect Property csvw:dialect {
                        Expect Property csvw:quoteChar
                        Expect Property csvw:delimiter
                        Expect Property csvw:header
                        Expect Property csvw:headerRowCount
                    }
                    Expect Property csvw:column {
                        Expect Type csvw:Column
                        Expect Property schema:name "C"
                        Expect Property <https://cube-creator.zazuko.com/vocab#csvColumnSample> "test"
                        Expect Property <https://cube-creator.zazuko.com/vocab#csvColumnSample> "test1"
                        Expect Property <https://cube-creator.zazuko.com/vocab#csvColumnSample> "test2"
                    }
                }

                Invoke {
                    Content-Type "text/csv"
                    Content-Disposition "file; filename=test2.jpg"

                    ```
                    C,D,E
                    1,2,test
                    ```
                } => {
                    Expect Status 201
                    Expect Type <https://cube-creator.zazuko.com/vocab#CSVSource>
                    Expect Property <http://schema.org/associatedMedia>
                }

                Invoke {
                    Content-Type "text/csv"
                    Content-Disposition "file; filename=test.jpg"

                    ```
                    A,B,C
                    1,2,test
                    ```
                } => {
                    Expect Status 409
                }

                Invoke {
                    Content-Type "text/csv"
                    Content-Disposition "file; filename=invalid-csv.csv"

                    <<< "invalid-csv.csv"
                } => {
                    Expect Status 201
                    Expect Type <https://cube-creator.zazuko.com/vocab#CSVSource>
                    Expect Property <http://schema.org/associatedMedia>
                    Expect Property <http://schema.org/error> "Invalid Record Length: expect 1, got 2 on line 3"
                }
            }
        }
    }
}
