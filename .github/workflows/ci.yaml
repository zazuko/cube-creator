name: CI

on:
  - push
  - pull_request

jobs:
  unit-test:
    runs-on: ubuntu-22.04
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/setup-env
      - run: yarn test
      - run: yarn test:queries
      - run: yarn test:cli:rest
        env:
          AUTH_RUNNER_CLIENT_SECRET: ${{ secrets.AUTH_RUNNER_CLIENT_SECRET }}
      - name: logs on fail
        if: ${{ failure() }}
        run: lando logs -s core
      - name: Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "yarn"
      - run: yarn install --ci
      - run: yarn lint
      - run: yarn workspace @cube-creator/ui lint

  e2e-tests:
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - name: Set e2e environment variables
        run: echo -e "\nVUE_APP_E2E=true\nVUE_APP_X_USER=john-doe\nVUE_APP_X_PERMISSION=pipelines:read,pipelines:write" >> .local.env
      - uses: ./.github/workflows/setup-env
      - run: yarn seed-data

      - name: Hydra e2e tests
        run: docker-compose -f docker-compose.yml -f docker-compose.posix.yml run e2e-tests
      - name: core logs on fail
        if: ${{ failure() }}
        run: lando logs -s core
      - name: pipeline logs on fail
        if: ${{ failure() }}
        run: lando logs -s pipeline

      - name: UI e2e tests
        run: yarn workspace @cube-creator/ui test:e2e --url https://app.cube-creator.lndo.site --headless
      - name: Save Cypress videos
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-videos
          path: ui/tests/e2e/videos/*
      - name: Save Cypress screenshots
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots
          path: ui/tests/e2e/screenshots/*

  pipeline:
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        command:
          - test:cli:transform
          - test:cli:publish
          - test:cli:import
          - test:cli:timeoutJobs

    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/setup-env
      - run: yarn ${{ matrix.command }}
        env:
          AUTH_RUNNER_CLIENT_SECRET: ${{ secrets.AUTH_RUNNER_CLIENT_SECRET }}
      - name: logs on fail
        if: ${{ failure() }}
        run: lando logs
      - name: Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
